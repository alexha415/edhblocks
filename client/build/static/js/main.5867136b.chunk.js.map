{"version":3,"sources":["reducers/searchReducer.js","reducers/deckReducer.js","reducers/cartReducer.js","reducers/authReducer.js","reducers/decksReducer.js","reducers/rootReducer.js","actions/types.js","store.js","actions/searchActions.js","components/layout/commander/checkbox/Checkbox.js","components/layout/commander/Searchbar.js","components/layout/commander/SearchCommander.js","actions/deckActions.js","actions/decksActions.js","components/card/Card.js","actions/cartActions.js","components/layout/commander/CommanderList.js","actions/authActions.js","components/pages/Home/Home.js","components/card/SearchList.js","components/layout/header/Searchbar.js","components/cart/CartItem.js","components/cart/CartList.js","components/pages/EditDeck/EditDeck.js","components/modal/ImageModal.js","components/deck/listcarditem/ListCardItem.js","components/deck/CardTypeList/CardTypeList.js","components/deck/deckContainer/DeckContainer.js","components/pages/Deck/Deck.js","components/pages/Decks/Decks.js","components/login/Login.js","components/pages/Login/LoginPage.js","components/register/Register.js","components/pages/Register/RegisterPage.js","components/layout/header/Header.js","components/routing/PrivateRoute.js","components/routing/PublicRoute.js","App.js","index.js"],"names":["initialState","cards","commanders","current","loading","error","filtered","commander","_id","deckList","colorId","categories","cardCart","token","isAuthenticated","decks","errors","combineReducers","search","state","action","type","payload","filter","searchCard","find","card","name","deck","console","log","removalCard","cart","auth","localStorage","setItem","JSON","stringify","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","search_root","connect","color","setColor","checkboxEl","useRef","useState","checked","setChecked","useEffect","className","onClick","htmlFor","ref","submit","send","text","setText","searchResults","value","placeholder","onChange","e","target","href","style","height","searchCommander","query","dispatch","a","queryString","Object","keys","forEach","key","fetch","res","json","data","colors","onSubmit","preventDefault","colorString","q","is","hasOwnProperty","identity","width","marginBottom","removeFromDeck","getState","editDeck","getDeck","did","method","headers","parse","getItem","ok","Error","body","msg","addCard","addCommander","clearSearch","addDeck","newDeck","withRouter","history","setName","image","setImage","cmc","setCmc","id","setId","setColorId","color_identity","layout","card_faces","image_uris","normal","setCategory","arr","type_line","split","parseColorId","newCard","cardType","push","src","alt","map","loadUser","message","filterCards","showCards","searchType","length","searchCards","removeCardFromCart","addCartToDeck","Promise","resolve","clearCart","CartItem","then","EditDeck","CartList","ImageModal","show","img","modalClass","handleClick","removeMode","setShow","removeFlag","setRemoveFlag","onMouseOver","onMouseLeave","CardTypeList","list","category","addLink","to","sortedDeck","cardList","sort","b","categoryList","categoryName","toggleRemoveMode","setRemoveMode","defaultButtons","removeButtons","removalList","setRemovalList","targetCard","flag","newList","getDecks","setCurrent","loginUser","user","password","email","formData","setFormData","required","LoginPage","registerUser","minLength","RegisterPage","logoutUser","privateNavigation","publicNavigation","Component","component","rest","render","props","App","exact","path","Home","Deck","Decks","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5867136b.chunk.js","sourcesContent":["import { \r\nSEARCH_CARDS,\r\nFILTER_CARDS,\r\nSEARCH_COMMANDER,\r\nCLEAR_SEARCH\r\n } from \"../actions/types\"\r\n\r\nconst initialState = {\r\n    cards: null,\r\n    commanders: null,\r\n    current: null,\r\n    loading: false,\r\n    error: null,\r\n    filtered: null\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type){\r\n        case SEARCH_CARDS :\r\n            return {\r\n                ...state,\r\n                cards: action.payload,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        case FILTER_CARDS: \r\n            return{\r\n                ...state,\r\n                filtered: state.cards.filter(searchCard => (\r\n                    !action.payload.find(card => searchCard.name === card.name)\r\n                )),\r\n                loading: false,\r\n                error: null\r\n            }\r\n        case SEARCH_COMMANDER:\r\n            return {\r\n                ...state,\r\n                commanders: action.payload,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        case CLEAR_SEARCH:\r\n            return {\r\n                ...state,\r\n                commanders: [],\r\n                loading: false,\r\n                error: null\r\n            }\r\n        default : \r\n            return{\r\n                ...state\r\n            }\r\n    }\r\n}","import { \r\n  CLEAR_DECK,\r\n  ADD_CART,\r\n  ADD_COMMANDER,\r\n  REMOVE_FROM_DECK,\r\n  GET_DECK,\r\n  DECK_FAIL\r\n} from \"../actions/types\"\r\n\r\nconst initialState = {\r\n  commander: null,\r\n  _id: null,\r\n  deckList: [],\r\n  colorId: '',\r\n  categories: [\r\n    'Land',\r\n    'Enchantment',\r\n    'Artifact',\r\n    'Sorcery',\r\n    'Instant',\r\n    'Planeswalker',\r\n    'Creature'\r\n  ],\r\n  loading: true,\r\n  error: null\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type){\r\n      case GET_DECK :\r\n        return {\r\n          ...state,\r\n          commander: action.payload.commander,\r\n          deckList: action.payload.deckList,\r\n          colorId: action.payload.colorId,\r\n          loading: false,\r\n          error: null,\r\n          _id: action.payload._id\r\n        }\r\n      case ADD_CART :\r\n        return {\r\n          ...state,\r\n          deckList: [...state.deckList, ...action.payload],\r\n          loading: false,\r\n          error: null\r\n        }\r\n      case CLEAR_DECK :\r\n        return {\r\n          ...state,\r\n          deckList: [],\r\n          loading: false,\r\n          error: null\r\n        }\r\n       case REMOVE_FROM_DECK :\r\n         console.log(state.deckList)\r\n         return {\r\n           ...state,\r\n           deckList: state.deckList.filter(card => {\r\n              return !action.payload.find(removalCard => {\r\n                return removalCard.name === card.name;\r\n              })\r\n           }),\r\n           loading: false,\r\n           error: null\r\n         }\r\n      case ADD_COMMANDER:\r\n        return{\r\n          ...state,\r\n          commander: action.payload,\r\n          colorId: action.payload.colorId\r\n        }\r\n      case DECK_FAIL:\r\n        return {\r\n          ...state,\r\n          commander: null,\r\n          colorId: '',\r\n          deckList: [],\r\n          error: action.payload,\r\n          loading: false\r\n        }\r\n      default : \r\n        return{\r\n            ...state\r\n        }\r\n  }\r\n}","import { \r\n  ADD_TO_CART,\r\n  CLEAR_CART,\r\n  REMOVE_FROM_CART,\r\n} from \"../actions/types\"\r\n\r\nconst initialState = {\r\n  cardCart: [],\r\n  loading: false,\r\n  error: null\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type){\r\n      case ADD_TO_CART :\r\n        return {\r\n            ...state,\r\n            cardCart: [...state.cardCart, action.payload],\r\n            loading: false,\r\n            error: null\r\n        }\r\n      case CLEAR_CART :\r\n        return {\r\n          ...state,\r\n          cardCart: [],\r\n          loading: false,\r\n          error: null\r\n        }\r\n        case REMOVE_FROM_CART :\r\n            return {\r\n              ...state,\r\n              cardCart: state.cardCart.filter(card => {\r\n                return card.name !== action.payload.name\r\n              })\r\n            }\r\n      default : \r\n        return{\r\n            ...state\r\n        }\r\n  }\r\n}","import {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_ERROR,\r\n    USER_LOADED,\r\n    LOGOUT_USER,\r\n    LOGIN_FAIL\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    isAuthenticated: false,\r\n    error: null,\r\n    loading: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type){\r\n        \r\n        case REGISTER_USER :\r\n            localStorage.setItem('token', JSON.stringify(action.payload.token));\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                token: action.payload.token,\r\n                error: null,\r\n                loading: false\r\n            }\r\n        case LOGIN_USER :\r\n            localStorage.setItem('token', JSON.stringify(action.payload.token));\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                token: action.payload.token,\r\n                error: null\r\n            }\r\n        case LOGOUT_USER :\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                token: null,\r\n                error: null\r\n            }\r\n        case USER_LOADED :\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        case AUTH_ERROR :\r\n                console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n                loading: false\r\n            }\r\n        case LOGIN_FAIL :\r\n                console.log(action.payload);\r\n            return{\r\n                ...state,\r\n                isAuthenticated: false,\r\n                loading: false,\r\n                token: null,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}","import {\r\n  GET_DECKS,\r\n  ADD_DECK,\r\n  EDIT_DECK,\r\n  SET_CURRENT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  decks: null,\r\n  current: null,\r\n  loading: false,\r\n  errors: null\r\n}\r\nexport default (state = initialState, action) => {\r\n  switch(action.type){\r\n    case GET_DECKS :\r\n      return {\r\n        ...state,\r\n        decks: action.payload,\r\n        loading: false,\r\n        errors: null\r\n      }\r\n      case ADD_DECK :\r\n        return {\r\n          ...state,\r\n          decks: action.payload,\r\n          loading: false,\r\n          errors: null\r\n        }\r\n      case SET_CURRENT :\r\n        return {\r\n          ...state,\r\n          current: action.payload\r\n        }\r\n        case ADD_DECK :\r\n          return {\r\n            ...state,\r\n            decks: action.payload,\r\n            current: action.payload._id,\r\n            loading: false,\r\n            errors: null\r\n          }\r\n    default :\r\n      return {\r\n        ...state\r\n      }\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport searchReducer from './searchReducer';\r\nimport deckReducer from './deckReducer';\r\nimport cartReducer from './cartReducer';\r\nimport authReducer from './authReducer';\r\nimport decksReducer from './decksReducer';\r\n\r\nexport default combineReducers({\r\n    search: searchReducer,\r\n    deck: deckReducer,\r\n    cart: cartReducer,\r\n    auth: authReducer,\r\n    decks: decksReducer\r\n});","export const GET_CARDS = 'GET_CARDS';\r\nexport const SEARCH_CARDS = 'SEARCH_CARDS';\r\nexport const FILTER_CARDS = 'FILTER_CARDS';\r\nexport const SEARCH_COMMANDER = 'SEARCH_COMMANDER'; \r\nexport const CLEAR_SEARCH = 'CLEAR_SEARCH';\r\n\r\n\r\nexport const GET_DECK = 'GET_DECK';\r\nexport const DECK_FAIL = 'DECK_FAIL';\r\nexport const ADD_COMMANDER = 'ADD_COMMANDER';\r\nexport const CLEAR_DECK = 'CLEAR_DECK';\r\nexport const ADD_CART = 'ADD_CART';\r\nexport const REMOVE_FROM_DECK = 'REMOVE_FROM_DECK';\r\n\r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\r\nexport const CLEAR_CART = 'CLEAR_CART';\r\n\r\nexport const REGISTER_USER = 'REGISTER_USER';\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\n\r\nexport const GET_DECKS = 'GET_DECKS';\r\nexport const ADD_DECK = 'ADD_DECK';\r\nexport const EDIT_DECK = 'EDIT_DECK';\r\nexport const DELETE_DECK = 'DELETE_DECK';\r\nexport const DECKS_ERROR = 'DECKS_ERROR';\r\nexport const SET_CURRENT = 'SET_CURRENT';","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/rootReducer';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\nconst initialState ={};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store;","import {\r\n    GET_CARDS,\r\n    SEARCH_CARDS,\r\n    FILTER_CARDS,\r\n    SEARCH_COMMANDER,\r\n    CLEAR_SEARCH\r\n} from './types';\r\n\r\nconst search_root = 'https://api.scryfall.com/cards/search';\r\n/*const searchCommanderString = `${search_root}?q=${query}+identity%3A${colorIdentity}+identity>colorless+is%3Acommander`;*/\r\n//colorIdenty: Commander color identity\r\n//query: string to search with\r\n\r\nexport const searchCards = (query) => async dispatch => {\r\n        let queryString = '';\r\n        Object.keys(query).forEach( key => {\r\n            if(queryString !== ''){\r\n                queryString += '+';\r\n            }\r\n            queryString += `${key}${query[key]}`\r\n        })\r\n        try {\r\n            const res = await fetch(`${search_root}?${queryString}`);\r\n            const data = await res.json();\r\n            dispatch({\r\n                type: SEARCH_CARDS,\r\n                payload: data.data\r\n            })\r\n        } catch (error) {\r\n            \r\n        }\r\n}\r\nexport const searchCommander = (query) => async dispatch => {\r\n    let queryString = '';\r\n    Object.keys(query).forEach( key => {\r\n        if(queryString !== ''){\r\n            queryString += '+';\r\n        }\r\n        queryString += `${key}${query[key]}`\r\n    })\r\n    try {\r\n        const res = await fetch(`${search_root}?${queryString}`);\r\n        const data = await res.json();\r\n        dispatch({\r\n            type: SEARCH_COMMANDER,\r\n            payload: data.data\r\n        })\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\nexport const getCards = () => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: GET_CARDS\r\n        })\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const filterCards = (cards) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: FILTER_CARDS,\r\n            payload: cards\r\n        })\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const clearSearch = () => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: CLEAR_SEARCH\r\n        })\r\n    } catch (error) {\r\n        \r\n    }\r\n}","import React, {useState, useEffect, useRef} from 'react'\r\nimport {connect} from 'react-redux';\r\nimport './checkbox.css';\r\nconst Checkbox = ({name, color, setColor}) => {\r\n\r\n  const checkboxEl = useRef(null)\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setColor(color, checked);\r\n  },[checked]);\r\n\r\n  const changeChecked = () => {\r\n    setChecked(!checked);\r\n  }\r\n\r\n  return (\r\n    <div className={`flex-container-row checkbox checkbox-${color}`} onClick={changeChecked}>\r\n      <label htmlFor={color}>{name}</label>\r\n      <input ref={checkboxEl} type=\"checkbox\" name={color} checked={checked}/>\r\n      <span className='checkmark'></span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect()(Checkbox)\r\n","import React, {useState, useEffect} from 'react'\r\nimport {connect} from 'react-redux';\r\nimport './searchbar.css';\r\n\r\nconst Searchbar = ({submit, send, search: {commanders}}) => {\r\n  \r\n  const [text, setText] = useState('');\r\n\r\n  //this allows search bar to reset when the search results are updated\r\n  const searchResults = JSON.stringify(commanders);\r\n  useEffect( () => {\r\n    setText('');\r\n  },[searchResults])\r\n\r\n  useEffect( () => {\r\n    send(text);\r\n  },[text]);\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onSubmit = (e) => {\r\n    setText('');\r\n    submit(e);\r\n  }\r\n\r\n  return (\r\n    <div className=\"input-group search-bar\">   \r\n      <input type=\"text\" className='form-control' value={text} placeholder='Search for a Commander...' name='text' onChange={onChange}/>\r\n      <div className=\"input-group-append\">\r\n        <a href=\"#/\" className='btn btn-outline-secondary' onClick={onSubmit}>\r\n          <i className='fa fa-search' style={{height: '100%'}}></i>\r\n        </a>\r\n      </div>  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(state => ({\r\n  search: state.search\r\n}))(Searchbar)\r\n","import React,{useState, Fragment} from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {searchCommander} from '../../../actions/searchActions';\r\nimport Checkbox from './checkbox/Checkbox';\r\nimport Searchbar from './Searchbar';\r\nimport './searchCommader.css';\r\n\r\nconst SearchCommander = ({searchCommander}) => {\r\n  const [text, setText] = useState('');\r\n  const [colors] = useState({});\r\n\r\n  const setColor = (color, checked) => {\r\n    if(checked){\r\n      colors[color] = '';\r\n    }else{\r\n      delete colors[color]\r\n    }\r\n  }\r\n  const sendTextToParent = (text) => {\r\n    setText(text);\r\n  }\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let colorString = '';\r\n    Object.keys(colors).forEach(key => {\r\n      colorString += key;\r\n    })\r\n    const query = {\r\n      q: `=${text}`,\r\n      is: `%3Acommander`\r\n    }\r\n    if(colors.hasOwnProperty('C')){\r\n      query.identity = `%3DC`\r\n    }\r\n    else if(colorString !== ''){\r\n      query.identity = `%3D${colorString}`\r\n    }\r\n    searchCommander(query)\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <form onSubmit={onSubmit} style ={{width: '70%', marginBottom: '2rem'}}>\r\n        <div className=\"flex-container-row checkbox-container\">\r\n          <Checkbox name='White' color='W' setColor={setColor}/>\r\n          <Checkbox name='Blue' color='U' setColor={setColor}/>\r\n          <Checkbox name='Black' color='B' setColor={setColor}/>\r\n          <Checkbox name='Red' color='R' setColor={setColor}/>\r\n          <Checkbox name='Green' color='G' setColor={setColor}/>\r\n          <Checkbox name='Colorless' color='C' setColor={setColor}/>\r\n        </div>\r\n        <Searchbar send={sendTextToParent} submit={onSubmit}/>\r\n      </form>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default connect(null, {searchCommander})(SearchCommander)","import {\r\n  ADD_CART,\r\n  CLEAR_DECK,\r\n  ADD_COMMANDER,\r\n  REMOVE_FROM_DECK,\r\n  GET_DECK,\r\n  DECK_FAIL,\r\n  EDIT_DECK,\r\n  DECKS_ERROR\r\n} from './types';\r\n\r\nexport const addCartToDeck = (cards) => (dispatch) => {\r\n    dispatch({\r\n      type: ADD_CART,\r\n      payload: cards\r\n    });\r\n    return Promise.resolve();\r\n}\r\nexport const clearDeck = () => async dispatch => {\r\n  dispatch({\r\n    type: CLEAR_DECK\r\n  })\r\n}\r\nexport const addCommander = (card) => async dispatch => {\r\n  dispatch({\r\n    type: ADD_COMMANDER,\r\n    payload: card\r\n  })\r\n}\r\n\r\n// export const removeFromDeck = (card) => async dispatch => {\r\n//   dispatch({\r\n//     type: REMOVE_FROM_DECK,\r\n//     payload: card\r\n//   })\r\n// }\r\n\r\nexport const removeFromDeck = (cards) => async (dispatch,getState) => {\r\n  dispatch({\r\n    type: REMOVE_FROM_DECK,\r\n    payload: cards\r\n  })\r\n  dispatch(editDeck(getState().deck));\r\n  console.log(getState().deck);\r\n  dispatch(getDeck(getState().deck._id));\r\n}\r\n\r\nexport const getDeck = (did) => async dispatch => {\r\n  try {\r\n    const res = await fetch(`/api/decks/${did}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        \"Authentication\" : JSON.parse(localStorage.getItem('token'))\r\n      }\r\n    });\r\n    const data = await res.json();\r\n    if(!res.ok) throw Error(data);\r\n    dispatch({\r\n      type: GET_DECK,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DECK_FAIL,\r\n      payload: error\r\n    });\r\n  }\r\n}\r\nexport const editDeck = (deck) => async dispatch => {\r\n  try {\r\n    const res = await fetch(`/api/decks/${deck._id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        \"Content-Type\":\"application/json\",\r\n        \"Authentication\": JSON.parse(localStorage.getItem('token'))\r\n      },\r\n      body: JSON.stringify(deck)\r\n    })\r\n    const data = await res.json();\r\n    \r\n    dispatch({\r\n      type: EDIT_DECK,\r\n      payload: data\r\n    })\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DECKS_ERROR,\r\n      payload: error.msg\r\n    })\r\n  }\r\n}","import {\r\nGET_DECKS,\r\nADD_DECK,\r\nEDIT_DECK,\r\nDECKS_ERROR,\r\nSET_CURRENT,\r\nGET_DECK\r\n} from './types';\r\n\r\nexport const getDecks = () => async dispatch => {\r\n  try {\r\n    const res = await fetch('/api/decks', {\r\n      method: 'GET',\r\n      headers: {\r\n        \"Content-Type\":\"application/json\",\r\n        \"Authentication\": JSON.parse(localStorage.getItem('token'))\r\n      }\r\n    })\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: GET_DECKS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DECKS_ERROR,\r\n      payload: error.msg\r\n    })\r\n  }\r\n}\r\n\r\nexport const addDeck = (deck) => async dispatch => {\r\n  const {commander, cards, colorId} = deck;\r\n  const newDeck = {\r\n    commander,\r\n    cards,\r\n    colorId\r\n  }\r\n  try {\r\n    const res = await fetch('/api/decks', {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\":\"application/json\",\r\n        \"Authentication\": JSON.parse(localStorage.getItem('token'))\r\n      },\r\n      body: JSON.stringify(newDeck)\r\n    })\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: ADD_DECK,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DECKS_ERROR,\r\n      payload: error.msg\r\n    })\r\n  }\r\n}\r\n\r\nexport const editDeck = (deck) => async dispatch => {\r\n  try {\r\n    const res = await fetch(`/api/decks/${deck._id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        \"Content-Type\":\"application/json\",\r\n        \"Authentication\": JSON.parse(localStorage.getItem('token'))\r\n      },\r\n      body: JSON.stringify(deck)\r\n    })\r\n    const data = await res.json();\r\n    \r\n    dispatch({\r\n      type: EDIT_DECK,\r\n      payload: data\r\n    })\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DECKS_ERROR,\r\n      payload: error.msg\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteDeck = (did) => async dispatch => {\r\n\r\n}\r\n\r\nexport const setCurrent = (did) => dispatch => {\r\n  dispatch({\r\n    type: SET_CURRENT,\r\n    payload: did\r\n  })\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {clearSearch} from '../../actions/searchActions';\r\nimport {addCard} from '../../actions/cartActions';\r\nimport {addCommander} from '../../actions/deckActions';\r\nimport {addDeck} from '../../actions/decksActions';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst Card = ({card, addCard, addCommander, commander, clearSearch, addDeck, history}) => {\r\n\r\n  const [name, setName] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [cmc, setCmc] = useState('');\r\n  const [id, setId] = useState('');\r\n  const [colorId, setColorId] = useState('');\r\n\r\n  useEffect( () => {\r\n    try {\r\n      setName(card.name);\r\n      setCmc(card.cmc);\r\n      setId(card.id);\r\n      setColorId(card.color_identity);\r\n      if(card.layout && card.layout === 'transform'){\r\n        setImage(card.card_faces[0].image_uris.normal);\r\n      }else{\r\n        setImage(card.image_uris.normal);\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error(card);\r\n    }\r\n    //eslint-disable-next-line\r\n  },[])\r\n  \r\n  const onClick = (e) => {\r\n    e.preventDefault()\r\n    const newCard = {\r\n      name,\r\n      id,\r\n      image,\r\n      cmc,\r\n      colorId: parseColorId(),\r\n      cardType: setCategory(),\r\n    }\r\n    if(commander){\r\n      addCommander(newCard);\r\n      clearSearch();\r\n      addDeck({\r\n        commander: newCard,\r\n        cards: [],\r\n        colorId: parseColorId()\r\n      })\r\n      history.push('/decks');\r\n    }else{\r\n      addCard(newCard);\r\n    }\r\n  }\r\n  \r\nconst setCategory = () => {\r\n  const arr = card.type_line.split(' ');\r\n  if(arr[0] === 'Legendary'){\r\n    return arr[1];\r\n  }else{\r\n    return arr[0];\r\n  }\r\n}\r\n\r\nconst parseColorId = () => {\r\n  let colors = '';\r\n  colorId.forEach( color => {\r\n    colors += color\r\n  });\r\n  return colors;\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <a href=\"#/\" onClick={onClick}>\r\n        <img className='card-img' src={image} alt=\"Card Loading...\"/>\r\n      </a>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(null,{addCard,addCommander,clearSearch,addDeck})(withRouter(Card))\r\n","import {\r\n  ADD_TO_CART,\r\n  CLEAR_CART,\r\n  REMOVE_FROM_CART,\r\n} from './types';\r\n\r\nexport const addCard = (cards) => async dispatch => {\r\n  dispatch({\r\n    type: ADD_TO_CART,\r\n    payload: cards\r\n  })\r\n}\r\nexport const removeCardFromCart = (card) => async dispatch => {\r\n  dispatch({\r\n    type: REMOVE_FROM_CART,\r\n    payload: card\r\n  })\r\n}\r\nexport const clearCart = () => async dispatch => {\r\n  dispatch({\r\n    type: CLEAR_CART\r\n  })\r\n}","import React, {useEffect} from 'react'\r\nimport Card from '../../card/Card';\r\nimport {connect} from 'react-redux';\r\nimport './commanderList.css';\r\n\r\nconst CommanderList = ({search: {commanders}}) => {\r\n\r\n  return (\r\n  <div className='container card-list-container'>\r\n    {commanders && commanders.map(card => {\r\n      return <Card key={card.id} card={card} commander={card}/>\r\n    })}\r\n  </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  search: state.search\r\n})\r\nexport default connect(mapStateToProps)(CommanderList)\r\n","import {\r\nLOGIN_USER,\r\nLOGOUT_USER,\r\nREGISTER_USER,\r\nUSER_LOADED,\r\nAUTH_ERROR,\r\nLOGIN_FAIL\r\n} from './types';\r\n\r\n\r\n\r\nexport const loadUser = () => async (dispatch) => {\r\n     let token = localStorage.getItem('token');\r\n     if (token) token = JSON.parse(token);\r\n    try {\r\n        const res = await fetch('/api/auth', {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authentication\": token\r\n            }\r\n        })\r\n        const data = await res.json();\r\n\r\n        if(!res.ok) throw Error(data.msg);\r\n\r\n        dispatch({\r\n            type: USER_LOADED,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: AUTH_ERROR,\r\n            payload: error.message\r\n        })\r\n    }\r\n}\r\n\r\n//attempt to load user\r\nexport const registerUser = (user) => async dispatch => {\r\n    try {\r\n        const res = await fetch('/api/users', {\r\n            method: 'POST',\r\n            body: JSON.stringify(user),\r\n            headers: {\r\n                \"Content-Type\" : \"application/json\"\r\n            }\r\n        })\r\n        const data = await res.json();\r\n        console.log(data);\r\n        if(!res.ok) throw Error(data.msg);\r\n        dispatch ({\r\n            type: REGISTER_USER,\r\n            payload: data\r\n        })\r\n        dispatch(loadUser());\r\n    } catch (error) {\r\n        dispatch({\r\n            type: AUTH_ERROR,\r\n            payload: error\r\n        }) \r\n    }\r\n}\r\nexport const logoutUser = () => async dispatch => {\r\n    dispatch({\r\n        type: LOGOUT_USER\r\n    })\r\n}\r\nexport const loginUser = (user) => async dispatch => {\r\n    try {\r\n        const res = await fetch('/api/auth', {\r\n            method: 'POST',\r\n            body: JSON.stringify(user),\r\n            headers: {\r\n                \"Content-Type\" : \"application/json\"\r\n            }\r\n        })\r\n        const data = await res.json();\r\n        if(!res.ok) throw Error(data.msg);\r\n        dispatch ({\r\n            type: LOGIN_USER,\r\n            payload: data\r\n        })\r\n\r\n        dispatch(loadUser());\r\n\r\n    } catch(err) {\r\n        console.log(err);\r\n        dispatch({\r\n            type: LOGIN_FAIL,\r\n            payload: err\r\n        }) \r\n    }\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport SearchCommander from '../../layout/commander/SearchCommander';\r\nimport CommanderList from '../../layout/commander/CommanderList';\r\nimport {loadUser} from '../../../actions/authActions';\r\nimport {connect} from 'react-redux';\r\n\r\nimport './home.css';\r\n\r\nconst Home = ({loadUser}) => {\r\n  useEffect( () => {\r\n    if(localStorage.getItem('token')){\r\n      loadUser();\r\n    }\r\n  },[]);\r\n  \r\n  return (\r\n    <div className=\"home flex-container-col\">\r\n      <h4>Search For A Commander</h4>\r\n      <SearchCommander/>\r\n      <CommanderList/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(null,{loadUser})(Home)\r\n","import React, {useEffect} from 'react'\r\nimport Card from './Card';\r\nimport {connect} from 'react-redux';\r\nimport {filterCards} from '../../actions/searchActions';\r\nimport './searchList.css';\r\n\r\nconst SearchList = ({searchType, search: {cards, filtered}, deck: {deckList, commander}, cart: {cardCart}, filterCards}) => {\r\n\r\n  useEffect( () => {\r\n    commander = {\r\n      name: 'test'\r\n    }\r\n    filterCards([commander,...deckList, ...cardCart]);\r\n  }, [deckList, cards, cardCart]);\r\n\r\n  let showCards;\r\n  filtered ? showCards = filtered : showCards = cards\r\n  \r\n  return (\r\n  <div className='grid search-grid'>\r\n    {showCards && showCards.length > 0 && showCards.map(card => {\r\n      return <Card key={card.id} card={card} commander={searchType}/>\r\n    })}\r\n  </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  search: state.search,\r\n  deck: state.deck,\r\n  cart: state.cart\r\n})\r\nexport default connect(mapStateToProps, {filterCards})(SearchList)\r\n","import React,{useState, Fragment} from 'react'\r\n\r\nimport {connect} from 'react-redux';\r\nimport {searchCards} from '../../../actions/searchActions';\r\nimport './searchbar.css';\r\n\r\nconst Searchbar = ({ searchCards, colorId }) => {\r\n\r\n  const [text, setText] = useState('');\r\n\r\n  const onChange = (e) => {\r\n    e.preventDefault();\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const query = {\r\n      q: `=${text}`\r\n    }\r\n    if(colorId){\r\n      query.identity = `%3D${colorId}`;\r\n    }\r\n    searchCards(query);\r\n    setText('');\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <form onSubmit={onSubmit} style={{width: '100%'}}>\r\n        <div className=\"input-group search-bar\">   \r\n          <input type=\"text\" className='form-control' value={text} htmlFor='text' placeholder='Search...' name='text' onChange={onChange}/>\r\n          <div className=\"input-group-append\">\r\n            <a href=\"#/\" className='btn btn-outline-secondary' onClick={onSubmit}>\r\n              <i className='fa fa-search' style={{height: '100%'}}></i>\r\n            </a>\r\n          </div>  \r\n        </div>\r\n      </form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default connect(state => ({\r\n  colorId: state.deck.colorId\r\n}), {searchCards})(Searchbar)\r\n","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {removeCardFromCart} from '../../actions/cartActions';\r\nimport './cart.css';\r\n\r\nconst DeckItem = ({card, removeCardFromCart}) => {\r\n\r\n  const onClick = (e) => {\r\n    e.preventDefault();\r\n    removeCardFromCart(card);\r\n  }\r\n  return (\r\n    <div className='cart-item' >\r\n      <a href=\"#/\" onClick={onClick}>\r\n        <p>\r\n        {card.name}\r\n        </p>\r\n      </a>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(null, {removeCardFromCart})(DeckItem)\r\n","import React, {useEffect} from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {addCartToDeck} from '../../actions/deckActions';\r\nimport {editDeck, addDeck} from '../../actions/decksActions';\r\nimport {clearCart} from '../../actions/cartActions';\r\nimport CartItem from './CartItem';\r\nimport {withRouter} from 'react-router-dom';\r\nimport './cart.css';\r\n\r\nconst DeckList = ({deck , cart:{ cardCart }, editDeck, addCartToDeck, clearCart, history}) => {\r\n\r\n  const addCart = () => {\r\n    addCartToDeck(cardCart).then( () => {\r\n      history.push('/deck');\r\n    });\r\n  }\r\n\r\n  useEffect( () => {\r\n    editDeck(deck);\r\n    clearCart();\r\n  }, [JSON.stringify(deck.deckList)]);\r\n\r\n  return (\r\n    <div className = 'flex-container-col cart-container'>\r\n      <div className=\"cart-list\">\r\n        {cardCart.map(card => {\r\n          return (<CartItem key={card.name} card={card}/>)\r\n        }\r\n        )}\r\n      </div>\r\n      <div>\r\n        <a href=\"#/\" className=\"cart-btn add-btn\"onClick={addCart}>\r\n          Add to Deck\r\n        </a>\r\n        <a href=\"#/\" className=\"cart-btn clear-btn\"onClick={clearCart}>\r\n          Clear\r\n        </a>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  cart: state.cart,\r\n  deck: state.deck\r\n})\r\nexport default connect(mapStateToProps, {editDeck, addCartToDeck, clearCart})(withRouter(DeckList))\r\n","import React from 'react'\r\nimport SearchList from '../../card/SearchList';\r\nimport Searchbar from'../../layout/header/Searchbar';\r\nimport CartList from '../../cart/CartList';\r\nimport './editDeck.css';\r\n\r\nconst EditDeck = () => {\r\n  \r\n  return (\r\n    <div className='flex-container-row cart'>\r\n      <div className=\"flex-container-col search-container\">\r\n        <h4>Search Cards</h4>\r\n        <Searchbar/>\r\n      <SearchList/>\r\n      </div>\r\n      <CartList/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditDeck\r\n","import React from 'react'\r\nimport './modal.css';\r\n\r\nconst ImageModal = ({show, img}) => {\r\n    const modalClass = show ? 'modal display-modal' : 'modal hide-modal'\r\n    return (\r\n        <div className={modalClass}>\r\n            <img src={img} alt=\"\" className='modal-image'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageModal\r\n","import React,{useState, useEffect, useRef} from 'react'\r\nimport ImageModal from '../../modal/ImageModal';\r\nimport {connect} from 'react-redux';\r\nimport {removeFromDeck} from '../../../actions/deckActions';\r\nimport './listcarditem.css';\r\n\r\nconst ListCardItem = ({key,handleClick, removeMode, card, removeFromDeck}) => {\r\n  \r\n  const [show, setShow] = useState(false);\r\n  const [removeFlag, setRemoveFlag] = useState(false);\r\n\r\n  \r\n  const onRemove = () => {\r\n    setShow(false);\r\n    setRemoveFlag(!removeFlag);\r\n    //removeFromDeck(card);\r\n  }\r\n  useEffect( () => {\r\n    handleClick(card, removeFlag);\r\n  },[removeFlag]);\r\n\r\n  const showModal = () => {\r\n      setShow(true);\r\n  }\r\n  const hideModal = () => {\r\n      setShow(false);\r\n  }\r\n\r\n  return (\r\n    <li key={card.name}>\r\n        <div className={`${removeFlag ? 'remove-item': ''} deck-item`} onMouseOver={showModal} onMouseLeave={hideModal} onClick={removeMode ? onRemove : null}>\r\n            <ImageModal show={show} img={card.image}/>\r\n            <a href=\"#/\">\r\n                <span className=\"card-text\">{card.name}</span>\r\n            </a>\r\n        </div>\r\n    </li>)\r\n}\r\n\r\nexport default connect(null,{removeFromDeck})(ListCardItem)\r\n","import React from 'react'\r\nimport ListCardItem from '../listcarditem/ListCardItem';\r\nimport './cardTypeList.css';\r\nconst CardTypeList = ({removeMode, handleClick, list, category}) => {\r\n    return (\r\n        <div className=\"category-container\">\r\n            <h4>{category}: {list ? list.length : '0'}</h4>\r\n            <ul>\r\n                {list && list.map( card => {\r\n                    return <ListCardItem key = {card.name} removeMode={removeMode} handleClick={handleClick} card={card}/>\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardTypeList\r\n","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport CardTypeList from '../CardTypeList/CardTypeList';\r\nimport {Link} from 'react-router-dom';\r\nimport './deckContainer.css';\r\n\r\nconst DeckContainer = ({removeMode, handleClick, deck : {deckList, categories}}) => {\r\n  \r\n  const addLink = <Link to='/edit' className=\"edit-deck-btn\">Add Cards</Link>;\r\n\r\n  let sortedDeck = [];\r\n  const sortDeck = () => {\r\n    categories.forEach( category => {\r\n      let cardList = deckList.filter(card => {\r\n        return card.cardType === category\r\n      })\r\n      cardList.length > 0 && sortedDeck.push(cardList);\r\n    })\r\n    sortedDeck.sort( (a,b) => {\r\n      return Object.keys(a) > Object.keys(b) ? -1 : 1;\r\n    })\r\n  }\r\n\r\n  {deckList && sortDeck() }\r\n  const emptyDeckDisplay = () => {\r\n    return (\r\n    <div className=\"empty-deck-container\">\r\n      <h4>Add Some Cards To Your Deck</h4>\r\n      {addLink}\r\n    </div>\r\n    )\r\n  }\r\n  const deckDisplay = () => {\r\n    return (\r\n    <div className=\"deck-grid\">\r\n      {sortedDeck.map(categoryList => {\r\n        const categoryName = categoryList[0].cardType;\r\n         return <CardTypeList removeMode={removeMode} handleClick={handleClick} key={categoryName} category={categoryName} list={categoryList}/>\r\n        })\r\n      }\r\n    </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='decklist-container'>\r\n      {deckList.length !== 0 ? deckDisplay() : emptyDeckDisplay()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(state => ({\r\n  deck: state.deck\r\n}))(DeckContainer)\r\n","import React, {Fragment, useState, useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Link} from 'react-router-dom';\r\nimport DeckContainer from '../../deck/deckContainer/DeckContainer';\r\nimport {getDeck, removeFromDeck} from '../../../actions/deckActions';\r\nimport {editDeck} from '../../../actions/decksActions';\r\nimport './deck.css';\r\n\r\n\r\nconst Deck = ({deck, did, deckList, commander , getDeck, removeFromDeck, editDeck}) => {\r\n\r\n    useEffect( () => {\r\n        if(did) getDeck(did)\r\n    },[]);\r\n\r\n\r\n\r\n    const toggleRemoveMode = (e) => {\r\n        e.preventDefault();\r\n        setRemoveMode(!removeMode);\r\n    }\r\n    const onRemove = (e) => {\r\n        e.preventDefault();\r\n        removeFromDeck(removalList);\r\n    }\r\n    const defaultButtons = \r\n    <Fragment>\r\n        <Link to='/edit' className=\"edit-deck-btn\">Add Cards</Link>\r\n        <Link to='#' className=\"edit-deck-btn\" onClick={toggleRemoveMode}>Remove Cards</Link>\r\n    </Fragment>\r\n\r\n    const removeButtons = \r\n    <Fragment>\r\n        <Link to='#' className=\"edit-deck-btn\" onClick={onRemove}>Confirm</Link>\r\n        <Link to='#' className=\"edit-deck-btn\" onClick={toggleRemoveMode}>Cancel</Link>\r\n    </Fragment>\r\n    \r\n    const [removeMode, setRemoveMode] = useState(false);\r\n    const [removalList, setRemovalList] = useState([]);\r\n\r\n    const handleRemoveClick = (targetCard, flag) => {\r\n        let newList;\r\n        if(flag){\r\n            newList = [...removalList, targetCard];\r\n        }else{\r\n            newList = removalList.filter( card => {\r\n                return card.name !== targetCard.name;\r\n            })\r\n        }\r\n            setRemovalList(newList);\r\n    }\r\n    return (\r\n        <div className='deck flex-container-row'>\r\n            <DeckContainer removeMode={removeMode} handleClick={handleRemoveClick}/>\r\n            <div className='flex-container-col deck-header'>\r\n                <h4>{commander && commander.name}</h4>\r\n                {<img src={commander && commander.image} alt = 'Commander 'style={{width: '65%'}}/>}\r\n                <span>\r\n                    {removeMode ? removeButtons : defaultButtons}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    commander: state.deck.commander,\r\n    deckList: state.deck.deckList,\r\n    deck: state.deck,\r\n    did: state.decks.current\r\n})\r\nexport default connect(mapStateToProps,{getDeck, removeFromDeck, editDeck})(Deck)\r\n","import React, {useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {setCurrent, getDecks} from '../../../actions/decksActions';\r\n\r\nconst Decks = ({getDecks, setCurrent, decks: {decks}}) => {\r\n\r\n  useEffect( () => {\r\n    getDecks();\r\n    //eslint-disable-next-line\r\n  },[]);\r\n  return (\r\n    <div>\r\n      {decks && decks.length > 0 && decks.map(deck =>(\r\n      <Link to='/deck' key={deck._id} onClick={()=>{\r\n        setCurrent(deck._id);\r\n      }}>{deck.commander.name}\r\n        </Link>\r\n      )\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect((state) => ({\r\n  decks: state.decks\r\n}), {getDecks, setCurrent})(Decks)\r\n","    import React,{useState} from 'react';\r\n    import {Link} from 'react-router-dom';\r\n    import './login.css';\r\n    import {connect} from 'react-redux';\r\n    import {loginUser} from '../../actions/authActions';\r\n    const Login = ({loginUser}) => {\r\n        \r\n        \r\n        const [formData, setFormData] = useState({\r\n            password: '',\r\n            email: ''\r\n        })\r\n\r\n        const onChange = (e) => {\r\n            e.preventDefault();\r\n\r\n            setFormData({\r\n                ...formData,\r\n                [e.target.name] : e.target.value\r\n            })\r\n        } \r\n\r\n        const onSubmit = async (e) => {\r\n            e.preventDefault();\r\n            const {password, email} = formData;\r\n            loginUser({password,email});\r\n        }\r\n\r\n        return (\r\n            <div className='flex-container-col login-container'>\r\n                <h4 className='auth-header'>Login</h4>\r\n                <form onSubmit={onSubmit} className='login-form'>\r\n                    <div className=\"input-group\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" name='email' className=\"login-input\" required value={formData.email} onChange={onChange}/>\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" name='password' value={formData.password} className=\"login-input\" required onChange={onChange}/>\r\n                    </div>\r\n                    <input type=\"submit\" className=\"btn login-submit\"/>\r\n                    <div className=\"input-group\">\r\n                        <h4>Don't Have An Account?</h4>\r\n                        <Link className='auth-link' to='/register'>Sign Up</Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    export default connect(null,{loginUser})(Login)\r\n    ","import React from 'react'\r\nimport Login from '../../login/Login';\r\n\r\nconst LoginPage = () => {\r\n\r\n    return (\r\n        <div>\r\n            <Login/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage\r\n","import React,{useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {registerUser} from '../../actions/authActions';\r\n\r\nconst Register = ({registerUser}) => {\r\n    \r\n    \r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        password: '',\r\n        email: ''\r\n    })\r\n\r\n    const onChange = (e) => {\r\n        e.preventDefault();\r\n\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    } \r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        console.log('submit');\r\n        const {name, password, email} = formData;\r\n        registerUser({\r\n            name,\r\n            password,\r\n            email\r\n        })\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className='flex-container-col login-container'>\r\n            <h4 className='auth-header'>Register</h4>\r\n            <form onSubmit={onSubmit} className='login-form'>\r\n                <div className=\"input-group\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input type=\"text\" name='name' className=\"login-input\" value={formData.name} required onChange={onChange} minLength=\"3\"/>\r\n                </div>\r\n                <div className=\"input-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" name='password' value={formData.password} className=\"login-input\" required onChange={onChange}/>\r\n                </div>\r\n                <div className=\"input-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" name='email' className=\"login-input\" required value={formData.email} onChange={onChange}/>\r\n                </div>\r\n                <input type=\"submit\" className=\"btn login-submit\"/>\r\n                <div className=\"input-group\">\r\n                    <h4>Have An Account?</h4>\r\n                    <Link className='auth-link' to='/login'>Log In</Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, {registerUser})(Register)\r\n","import React from 'react'\r\nimport Register from '../../register/Register';\r\nconst RegisterPage = () => {\r\n    return (\r\n        <div>\r\n            <Register/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterPage\r\n","import React, {Fragment} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport './header.css';\r\nimport { connect } from 'react-redux';\r\nimport {logoutUser} from '../../../actions/authActions';\r\n\r\nconst Header = ({logoutUser, auth: {isAuthenticated}}) => {\r\n\r\n  const privateNavigation = (\r\n    <Fragment>\r\n      <li className=\"nav-bar-item\">\r\n        < Link to=\"/decks\" className=\"nav-bar-link\">Decks</Link>\r\n      </li>\r\n      <li className=\"nav-bar-item\">\r\n        <Link to=\"/\" className=\"nav-bar-link\" onClick={logoutUser}>Logout</Link>\r\n      </li>\r\n    </Fragment>\r\n    \r\n  )\r\n  const publicNavigation = (\r\n    <li className=\"nav-bar-item\">\r\n      <Link to=\"/login\" className=\"nav-bar-link\">Login</Link>\r\n    </li>\r\n  )\r\n  return (\r\n    <div className=\"flex-container-row header\">\r\n      <ul className='nav-bar'>\r\n        <li className=\"nav-bar-item\">\r\n          <Link to=\"/\" className=\"nav-bar-link\">Home</Link>\r\n        </li>\r\n        {isAuthenticated ? privateNavigation : publicNavigation}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(state => ({\r\n  auth: state.auth\r\n}), {logoutUser})(Header)\r\n","import React from 'react'\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nconst PrivateRoute = ({auth: {isAuthenticated, loading}, component: Component, ...rest}) => {\r\n \r\n  return (\r\n    <Route {...rest} render={(props) => {\r\n      return !isAuthenticated && !loading ? \r\n      <Redirect to='/login'/> :\r\n      <Component {...props}/>\r\n    }}>\r\n      \r\n    </Route>\r\n  )\r\n}\r\n\r\nexport default connect( state => ({\r\n  auth: state.auth\r\n}))(PrivateRoute)\r\n","import React,{useEffect} from 'react'\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {loadUser} from '../../actions/authActions';\r\nimport {connect} from 'react-redux';\r\n\r\nconst PublicRoute = ({auth: {isAuthenticated}, component: Component, loadUser, ...rest}) => {\r\n\r\n  useEffect( () => {\r\n    if(localStorage.getItem('token')){\r\n      loadUser();\r\n    }\r\n  },[]);\r\n\r\n  return (\r\n    <Route {...rest} render={(props) => {\r\n      return !isAuthenticated ?\r\n      <Component {...props}/>\r\n      :<Redirect to='/'/>\r\n    }}>\r\n    </Route>\r\n  )\r\n}\r\n\r\nexport default connect( state => ({\r\n  auth: state.auth\r\n}),{loadUser} )(PublicRoute)","import React from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\n\r\nimport store from './store';\r\nimport {Provider} from 'react-redux';\r\n\r\nimport Home from './components/pages/Home/Home';\r\nimport EditDeck from './components/pages/EditDeck/EditDeck';\r\nimport Deck from './components/pages/Deck/Deck';\r\nimport Decks from './components/pages/Decks/Decks';\r\nimport LoginPage from './components/pages/Login/LoginPage';\r\nimport RegisterPage from './components/pages/Register/RegisterPage';\r\nimport Header from './components/layout/header/Header';\r\nimport PrivateRoute from './components/routing/PrivateRoute';\r\nimport PublicRoute from './components/routing/PublicRoute';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <div className=\"App flex-container-col\">\r\n          <Header/>\r\n          <Switch>\r\n            <Route exact path='/' component={Home}/>\r\n            <PrivateRoute exact path='/deck' component={Deck}/>\r\n            <PrivateRoute exact path='/decks' component={Decks}/>\r\n            <PrivateRoute exact path='/edit' component={EditDeck}/>\r\n            <PublicRoute exact path='/login' component={LoginPage}/>\r\n            <PublicRoute exact path='/register' component={RegisterPage}/>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}